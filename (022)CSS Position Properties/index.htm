<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>css position properties</title>
    <style>
        * {
            margin: 0px;
            padding: 0px;
        }

        .box {
            border: 2px solid black;
            width: 80vw;
            height: 80px;
            margin: 3px;
            padding: 5px;
        }

        .box1 {
            background-color: rgb(147, 205, 255);
            /* position: sticky;
            height: 80px;
            top:0px;
            width: 100%;
            margin: 0px;
            padding: 0px; */
            /* position: absolute;
            top: 0px; */
        }

        .box2 {
            background-color: rgb(95, 177, 250);

            /* position: relative;
            z-index: -1; */
            /* top: 40px; */
            /* left: 50px; */

        }

        .box3 {
            background-color: rgb(46, 157, 255);
            /* position: fixed;
            left: 250px;
            top:0px;
            height: 30px; */
        }

        .box4 {
            background-color: rgb(6, 138, 253);
        }

        .box5 {
            background-color: rgb(0, 70, 131);
            color: aliceblue;
        }

        .box6 {
            background-color: rgb(0, 50, 95);
            color: aliceblue;
        }

        .parent {
            border: 2px solid black;
            margin: 40px;
            padding: 67px;
            position: sticky;
            top:0px;
            /* Exception: transform, filter, or perspective properties can also make an element appear as positioned */
            /* transform: translate(0); */
            /* filter: invert(0); */
            /* perspective: 0em; */

        }
    </style>
</head>

<body>
    <div class="parent">
        <div class="box box1">1 CSS Positioning
            The CSS positions allow you to precisely control the placement of an element on the web page.

            It helps to determine how elements are placed inside the container element and how they interact with the
            other elements on the page.</div>
        <div class="box box2">2 Static(Default)
            The elements are positioned according to the normal flow of the document.</div>
        <div class="box box3">3Relative
            Elements are positioned relative to the normal position in the document.

            You can use the top, right, bottom, and left properties to move the element from its original position.
        </div>
        <div class="box box4">4Absolute
            Elements are positioned relative to the closest positioned ancestor (parent), which means we need to have a
            parent element with a positioning other than 'static'.

            Note: An absolutely positioned element is removed from the normal flow.</div>
        <div class="box box5">5Fixed
            Elements are positioned relative to the viewport (screen) and do not move when the page is scrolled.

            This is useful for creating elements like fixed headers or footers.</div>

        <div class="box box6">
            Sticky
            Position sticky is a hybrid between 'relative' and 'fixed'.

            It allows an element to become "stuck" to the top or bottom of its container when scrolling, but it behaves
            like relative positioning within the container until it reaches a specified offset.
        </div>
    </div>
    <div>
        lorem600
    </div>
</body>

</html>